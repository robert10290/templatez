// Generated by view binder compiler. Do not edit!
package com.wrkteam.quadclubapp.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import com.wrkteam.quadclubapp.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityLoginBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final Button btnToLogin;

  @NonNull
  public final Button btnToRegister;

  @NonNull
  public final TextView textView3;

  @NonNull
  public final EditText txtLogEmail;

  @NonNull
  public final EditText txtLogPassword;

  private ActivityLoginBinding(@NonNull ConstraintLayout rootView, @NonNull Button btnToLogin,
      @NonNull Button btnToRegister, @NonNull TextView textView3, @NonNull EditText txtLogEmail,
      @NonNull EditText txtLogPassword) {
    this.rootView = rootView;
    this.btnToLogin = btnToLogin;
    this.btnToRegister = btnToRegister;
    this.textView3 = textView3;
    this.txtLogEmail = txtLogEmail;
    this.txtLogPassword = txtLogPassword;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityLoginBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityLoginBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_login, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityLoginBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btn_to_login;
      Button btnToLogin = rootView.findViewById(id);
      if (btnToLogin == null) {
        break missingId;
      }

      id = R.id.btn_to_register;
      Button btnToRegister = rootView.findViewById(id);
      if (btnToRegister == null) {
        break missingId;
      }

      id = R.id.textView3;
      TextView textView3 = rootView.findViewById(id);
      if (textView3 == null) {
        break missingId;
      }

      id = R.id.txt_log_email;
      EditText txtLogEmail = rootView.findViewById(id);
      if (txtLogEmail == null) {
        break missingId;
      }

      id = R.id.txt_log_password;
      EditText txtLogPassword = rootView.findViewById(id);
      if (txtLogPassword == null) {
        break missingId;
      }

      return new ActivityLoginBinding((ConstraintLayout) rootView, btnToLogin, btnToRegister,
          textView3, txtLogEmail, txtLogPassword);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
